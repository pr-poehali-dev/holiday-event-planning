import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ HTML...\n');

console.log('üì¶ –®–∞–≥ 1: –°–±–æ—Ä–∫–∞ —á–µ—Ä–µ–∑ Vite...');
try {
  execSync('npm run build', { stdio: 'inherit' });
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ:', error.message);
  process.exit(1);
}

console.log('\nüìù –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö HTML —Ñ–∞–π–ª–æ–≤...');

const distDir = path.join(__dirname, 'dist');
const htmlDistDir = path.join(__dirname, 'html-build');

if (fs.existsSync(htmlDistDir)) {
  fs.rmSync(htmlDistDir, { recursive: true, force: true });
}
fs.mkdirSync(htmlDistDir, { recursive: true });

const indexHtml = fs.readFileSync(path.join(distDir, 'index.html'), 'utf-8');

const cssMatch = indexHtml.match(/<link[^>]*href="([^"]*\.css)"[^>]*>/);
const jsMatch = indexHtml.match(/<script[^>]*src="([^"]*\.js)"[^>]*>/);

let cssFile = null;
let jsFile = null;

const cssMatches = indexHtml.matchAll(/<link[^>]*href="([^"]*\.css)"[^>]*>/g);
for (const match of cssMatches) {
  cssFile = match[1];
}

const jsMatches = indexHtml.matchAll(/<script[^>]*src="([^"]*\.js)"[^>]*>/g);
for (const match of jsMatches) {
  jsFile = match[1];
}

console.log(`   CSS —Ñ–∞–π–ª: ${cssFile || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
console.log(`   JS —Ñ–∞–π–ª: ${jsFile || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);

const assetsDir = path.join(distDir, 'assets');
const htmlAssetsDir = path.join(htmlDistDir, 'assets');

if (fs.existsSync(assetsDir)) {
  fs.mkdirSync(htmlAssetsDir, { recursive: true });
  
  const files = fs.readdirSync(assetsDir);
  files.forEach(file => {
    fs.copyFileSync(
      path.join(assetsDir, file),
      path.join(htmlAssetsDir, file)
    );
  });
  console.log('   ‚úÖ –†–µ—Å—É—Ä—Å—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ assets/');
}

const pages = [
  { name: 'index', title: '–î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞ - –ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π', route: '' },
  { name: 'programs', title: '–ü—Ä–æ–≥—Ä–∞–º–º—ã - –î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞', route: 'programs' },
  { name: 'characters', title: '–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ - –î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞', route: 'characters' },
  { name: 'prices', title: '–¶–µ–Ω—ã - –î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞', route: 'prices' },
  { name: 'gallery', title: '–ì–∞–ª–µ—Ä–µ—è - –î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞', route: 'gallery' },
  { name: 'reviews', title: '–û—Ç–∑—ã–≤—ã - –î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞', route: 'reviews' },
  { name: 'contacts', title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã - –î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞', route: 'contacts' }
];

console.log('\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ HTML —Ñ–∞–π–ª–æ–≤:');

pages.forEach(page => {
  const htmlContent = `<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${page.title}</title>
  <meta name="description" content="–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞ –Ω–∞ –¥–æ–º –≤ –ú–æ—Å–∫–≤–µ. –ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –¥–µ—Ç–µ–π –æ—Ç 2 –¥–æ 12 –ª–µ—Ç. –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ—Å—Ç—é–º—ã, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –≤—ã–µ–∑–¥ –ø–æ –≤—Å–µ–π –ú–æ—Å–∫–≤–µ.">
  ${cssFile ? `<link rel="stylesheet" href="${cssFile}">` : ''}
</head>
<body>
  <div id="root"></div>
  <script>window.__INITIAL_ROUTE__ = '/${page.route}';</script>
  ${jsFile ? `<script type="module" src="${jsFile}"></script>` : ''}
</body>
</html>`;

  const fileName = page.name === 'index' ? 'index.html' : `${page.name}.html`;
  fs.writeFileSync(path.join(htmlDistDir, fileName), htmlContent);
  console.log(`   ‚úÖ ${fileName}`);
});

const faviconPath = path.join(distDir, 'favicon.ico');
if (fs.existsSync(faviconPath)) {
  fs.copyFileSync(faviconPath, path.join(htmlDistDir, 'favicon.ico'));
  console.log('   ‚úÖ favicon.ico');
}

console.log('\n‚ú® –ì–æ—Ç–æ–≤–æ! HTML —Ñ–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ: html-build/');
console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞:');
console.log('   html-build/');
console.log('   ‚îú‚îÄ‚îÄ index.html');
console.log('   ‚îú‚îÄ‚îÄ programs.html');
console.log('   ‚îú‚îÄ‚îÄ characters.html');
console.log('   ‚îú‚îÄ‚îÄ prices.html');
console.log('   ‚îú‚îÄ‚îÄ gallery.html');
console.log('   ‚îú‚îÄ‚îÄ reviews.html');
console.log('   ‚îú‚îÄ‚îÄ contacts.html');
console.log('   ‚îî‚îÄ‚îÄ assets/');
console.log('       ‚îú‚îÄ‚îÄ *.css (–æ–±—â–∏–π —Å—Ç–∏–ª—å)');
console.log('       ‚îú‚îÄ‚îÄ *.js (–æ–±—â–∏–π —Å–∫—Ä–∏–ø—Ç)');
console.log('       ‚îî‚îÄ‚îÄ * (–¥—Ä—É–≥–∏–µ —Ä–µ—Å—É—Ä—Å—ã)');
console.log('\nüí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±–æ–π HTML —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
console.log('üí° –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±—â–∏–µ CSS –∏ JS –∏–∑ –ø–∞–ø–∫–∏ assets/');